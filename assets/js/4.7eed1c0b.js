(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{170:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("本文翻译自"),n("a",{attrs:{href:"https://wiki.qt.io/Qt_for_Python_Signals_and_Slots",target:"_blank",rel:"noopener noreferrer"}},[t._v("Qt for Python Signals and Slots - Qt Wiki"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("本页描述了Qt for Python中信号和插槽的使用。重点是说明使用所谓的新式信号和插槽，尽管传统的语法也作为参考。")]),t._v(" "),n("p",[t._v("这种新风格的主要目标是为Python程序员提供更多的Pythonic语法。")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("QtCore.SIGNAL()和QtCore.SLOT()宏允许Python与Qt信号和插槽传递机制进行交互。这是使用信号和插槽的旧方法。")]),t._v(" "),n("p",[t._v("下面的示例使用来自QPushButton的众所周知的点击信号。connect方法具有非python友好语法。有必要通知对象，其信号（通过宏）和要连接的插槽。")]),t._v(" "),t._m(2),t._m(3),t._v(" "),n("p",[t._v("新式使用不同的语法来创建和连接信号和插槽。 前面的示例可以重写为：")]),t._v(" "),t._m(4),t._m(5),t._v(" "),n("p",[t._v("可以使用QtCore.Signal()类定义信号。Python类型和C类型可以作为参数传递给它。如果你需要重载它，只需将类型作为元组或列表传递。")]),t._v(" "),n("p",[t._v("除此之外，它还可以接收定义信号名称的命名参数名称。如果没有任何内容作为名称传递，则新信号将与分配给它的变量具有相同的名称。")]),t._v(" "),n("p",[t._v("下面的示例部分包含有关使用QtCore.Signal()的示例集合。")]),t._v(" "),n("p",[t._v("注意：应仅在继承自QObject的类中定义信号。这样，信号信息被添加到类QMetaObject结构中。")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("使用装饰器QtCore.Slot()分配和重载插槽。同样，要定义签名，只需传递类似QtCore.Signal()类的类型。与Signal()类不同，要重载函数，不要将每个变量作为元组或列表传递。相反，您必须为每个不同的签名定义一个新的装饰器。下面的示例部分将更清楚。")]),t._v(" "),n("p",[t._v("另一个区别是它的关键字。Slot()接受名称和结果。result关键字定义将返回的类型，可以是C或Python类型。name的行为与Signal()中的行为相同。如果没有任何内容作为名称传递，则新插槽将与正在装饰的功能具有相同的名称。")]),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("以下示例说明了如何在PySide2中定义和连接信号和插槽。 给出了基本连接和更复杂的示例。")]),t._v(" "),t._m(8)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"qt-for-python-signals-and-slots"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt-for-python-signals-and-slots","aria-hidden":"true"}},[this._v("#")]),this._v(" Qt for Python Signals and Slots")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"传统语法-signal-and-slot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传统语法-signal-and-slot","aria-hidden":"true"}},[this._v("#")]),this._v(" 传统语法: SIGNAL () and SLOT()")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" SIGNAL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QObject\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"func has been called!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPushButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Call func"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nQObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SIGNAL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clicked()'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                                             \n\nsys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"新语法-signal-and-slot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新语法-signal-and-slot","aria-hidden":"true"}},[this._v("#")]),this._v(" 新语法: Signal() and Slot()")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"func has been called!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPushButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Call func"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clicked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用qtcore-signal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用qtcore-signal","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用QtCore.Signal()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用qtcore-slot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用qtcore-slot","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用QtCore.Slot()")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[this._v("#")]),this._v(" 示例")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("p",[t._v("Hello World示例：基本示例，显示如何将信号连接到没有任何参数的插槽。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtCore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QtGui\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define a function that will be used as a slot")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),t._v("\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QtGui"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nbutton "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QtGui"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QPushButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Say hello!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect the clicked signal to the sayHello slot")]),t._v("\nbutton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clicked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sayHello"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("接下来，添加一些参数。 这是一个修改过的Hello World版本。 一些参数被添加到插槽中并创建一个新信号。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys                                                                  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton                     \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot                            \n                                                                            \napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                \n                                                                            \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define a new slot that receives a string and has                          ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'saySomeWords' as its name                                                ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say_some_words")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                               \n                                                                            \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Communicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                 \n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create a new signal on the fly and name it 'speak'                       ")]),t._v("\n speak "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                        \n                                                                            \nsomeone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Communicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                     \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect signal and slot                                                   ")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_some_words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                         \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# emit 'speak' signal                                                         ")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello everybody!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("添加一些重载。 对前一个示例的一个小修改，现在重载了装饰器。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys                                                                  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton                     \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot                            \n                                                                            \napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                \n                                                                            \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define a new slot that receives a C 'int' or a 'str'                      ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and has 'saySomething' as its name                                        ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                  \n@Slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say_something")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                   \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                            \n                                                                            \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Communicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                 \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create two new signals on the fly: one will handle                    ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# int type, the other will handle strings                               ")]),t._v("\n    speak_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                              \n    speak_word "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                  \n                                                                            \nsomeone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Communicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                     \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect signal and slot properly                                          ")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                 \nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak_word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                   \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# emit each 'speak' signal                                                  ")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                               \nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak_word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello everybody!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("插槽过载和更复杂的信号连接和发射的示例：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtWidgets "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QPushButton\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot\n\napp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# define a new slot that receives a C 'int' or a 'str'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and has 'saySomething' as its name")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@Slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say_something")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stuff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Communicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create two new signals on the fly: one will handle")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# int type, the other will handle strings")]),t._v("\n    speak "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsomeone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Communicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# connect signal and slot. As 'int' is the default")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# we have to specify the str when connecting the")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# second signal")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# emit 'speak' signal with different arguments.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# we have to specify the str as int is the default")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello everybody!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("发出信号的对象方法的示例：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys                                                                  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal                                  \n                                                                            \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Must inherit QObject for signals                                          ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Communicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                 \n    speak "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                        \n              \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                                     \n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Communicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("say_hello"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                             \n                                                                            \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("speaking_method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                              \n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say_hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                \n\n                                                                            \nsomeone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Communicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                 \nsomeone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speaking_method"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("信号是实例拥有的运行时对象，它们不是类属性：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Erroneous: refers to class Communicate, not an instance of the class")]),t._v("\nCommunicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speak"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("say_something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# raises exception: AttributeError: 'PySide2.QtCore.Signal' object has no attribute 'connect'")]),t._v("\n")])])])])])}],!1,null,null,null);s.default=e.exports}}]);